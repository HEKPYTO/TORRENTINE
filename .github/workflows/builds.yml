name: Create Release

on:
  workflow_run:
    workflows: ["Java Tests"]
    types:
      - completed
    branches: [main]

permissions:
  contents: write

jobs:
  create-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Prepare Build Directories
        run: |
          mkdir -p temp/student temp/solution

          # Sync student directory
          rsync -av --delete \
            --exclude 'test/build/' \
            --exclude 'test/solution/' \
            --exclude 'base/' \
            src/ temp/student/

          # Sync solution directory
          rsync -av --delete \
            --exclude 'test/build/' \
            --exclude 'test/validate/' \
            src/ temp/solution/

      - name: Check for Changes in Student Directory
        id: check_student_changes
        run: |
          git diff --exit-code --quiet temp/student || echo "Changes detected in student directory" > student_changes.txt

      - name: Check for Changes in Solution Directory
        id: check_solution_changes
        run: |
          git diff --exit-code --quiet temp/solution || echo "Changes detected in solution directory" > solution_changes.txt

      - name: Create Zip Archives
        run: |
          if [ -f student_changes.txt ]; then
            zip -r student.zip temp/student
          fi
          if [ -f solution_changes.txt ]; then
            zip -r solution.zip temp/solution
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            student.zip
            solution.zip
          tag_name: v${{ github.run_number }}
          name: Build V${{ github.run_number }}
          body: |
            This release contains the following build directories:
            - **student** (if changes detected)
            - **solution** (if changes detected)
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Temporary Files
        run: rm -rf temp student.zip solution.zip